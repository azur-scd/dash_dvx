{"version":3,"sources":["webpack:///./src/lib/components/List.react.js"],"names":["List","props","id","dataSource","keyExpr","parentIdExpr","autoExpandAll","pagingIsEnabled","defaultPageSize","pageSizeSelectorIsEnabled","allowedPageSizes","sortingMode","searchPanelIsEnabled","headerFilterIsEnabled","filterRowIsEnabled","columnChooserIsEnabled","selectionMode","selectionIsRecursive","selected_rows","setProps","e","data","component","getSelectedRowsData","onExporting","Component","defaultProps","propTypes","PropTypes","string","array","isRequired","bool","number","func"],"mappings":"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","file":"be1acb3-main-wps-hmr.js","sourcesContent":["import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TreeList, {\r\n    Scrolling, Paging, Pager, Sorting, FilterRow, HeaderFilter, SearchPanel,Selection, Export, ColumnChooser, Lookup\r\n  } from 'devextreme-react/tree-list';\r\n\r\n  export default class List extends Component { \r\n\r\n    render() {\r\n      const {id,dataSource,keyExpr,parentIdExpr,autoExpandAll,pagingIsEnabled,defaultPageSize,pageSizeSelectorIsEnabled,allowedPageSizes,sortingMode,searchPanelIsEnabled, headerFilterIsEnabled, filterRowIsEnabled, columnChooserIsEnabled, selectionMode, selectionIsRecursive, selected_rows, setProps} = this.props;\r\n      return (\r\n        <TreeList\r\n        id={id}\r\n        dataSource={dataSource}\r\n        keyExpr={keyExpr}\r\n        parentIdExpr={parentIdExpr}\r\n        autoExpandAll={autoExpandAll}\r\n        showBorders={true}\r\n        columnAutoWidth={true}\r\n        wordWrapEnabled={true}\r\n        selected_rows={selected_rows}\r\n        onSelectionChanged={(e) => { \r\n          const data = e.component.getSelectedRowsData(selectionMode);\r\n          setProps({selected_rows: data})\r\n         }}\r\n         onExporting={this.onExporting}\r\n        >\r\n        <Scrolling\r\n          mode=\"standard\" />\r\n        <Paging\r\n            enabled={pagingIsEnabled}\r\n            defaultPageSize={defaultPageSize} />\r\n       <Pager\r\n            showPageSizeSelector={pageSizeSelectorIsEnabled}\r\n            allowedPageSizes={allowedPageSizes}\r\n            showInfo={true} />\r\n       <Sorting mode={sortingMode} />\r\n       <SearchPanel visible={searchPanelIsEnabled}\r\n            width={240}\r\n            placeholder=\"Search...\" />\r\n        <HeaderFilter visible={headerFilterIsEnabled} />\r\n        <FilterRow visible={filterRowIsEnabled} />\r\n        <ColumnChooser enabled={columnChooserIsEnabled} />\r\n        <Selection\r\n            recursive={selectionIsRecursive}\r\n            mode=\"multiple\"\r\n          />\r\n        </TreeList>\r\n      );\r\n    }\r\n  }\r\n\r\n  List.defaultProps = {autoExpandAll:true,pagingIsEnabled:true, defaultPageSize:10,pageSizeSelectorIsEnabled:false, sortingMode:\"multiple\",searchPanelIsEnabled:true, headerFilterIsEnabled:true, filterRowIsEnabled: true, columnChooserIsEnabled: false, selectionMode:'all', selectionIsRecursive:true, selected_rows:[]};\r\n  List.propTypes = {\r\n      /**\r\n       * The ID used to identify this component in Dash callbacks.\r\n       */\r\n      id: PropTypes.string,\r\n       /**\r\n       * An key,value array of data to be displayed in the datagrid\r\n       */\r\n      dataSource: PropTypes.array.isRequired,\r\n       /**\r\n       * The dataField to be used as index|key.\r\n       */\r\n      keyExpr: PropTypes.string.isRequired,\r\n       /**\r\n       * The dataField to be used as the key to loop on to display the unflattes list.\r\n       */\r\n      parentIdExpr: PropTypes.string.isRequired,\r\n      /**\r\n       * Deploys the item hierarchy (true|false)\r\n       */\r\n      autoExpandAll: PropTypes.bool,\r\n      /**\r\n       * Enables the paging of results\r\n       */\r\n       pagingIsEnabled: PropTypes.bool, \r\n      /**\r\n       * The number of items by page.\r\n       */\r\n       defaultPageSize: PropTypes.number,\r\n      /**\r\n       * Enables de pages size selector (to choose the numbe rof displayed items by page)\r\n       */\r\n       pageSizeSelectorIsEnabled: PropTypes.bool, \r\n       /**\r\n       * Array of possible page size numbers\r\n       */\r\n       allowedPageSizes : PropTypes.array,\r\n       /**\r\n       * The type of sorting data (multiple|).\r\n       */\r\n      sortingMode: PropTypes.string,\r\n       /**\r\n       * Displays the search panel above the datagrid (true|false).\r\n       */\r\n      searchPanelIsEnabled: PropTypes.bool,\r\n      /**\r\n       * Displays a filter search icon beside to the coumn label (true|false).\r\n       */\r\n      headerFilterIsEnabled: PropTypes.bool,\r\n      /**\r\n       * Displays a filter search line under each column's label in teh datagrid (true|false).\r\n       */\r\n      filterRowIsEnabled: PropTypes.bool,\r\n      /**\r\n       * Enables dataGrid column chooser widget (true|false).\r\n       */\r\n      columnChooserIsEnabled: PropTypes.bool,\r\n       /**\r\n       * Activate the feauture of row's selection (none|single|multiple).\r\n       */\r\n      selectionMode: PropTypes.string,\r\n       /**\r\n       * Selects the sub-items with a selected item (true|false)\r\n       */\r\n      selectionIsRecursive: PropTypes.bool,\r\n       /**\r\n       * Array of selected items.\r\n       */\r\n      selected_rows: PropTypes.array,\r\n      /**\r\n       * Dash-assigned callback that should be called to report property changes\r\n       * to Dash, to make them available for callbacks.\r\n       */\r\n      setProps: PropTypes.func\r\n  };"],"sourceRoot":""}