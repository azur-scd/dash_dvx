{"version":3,"sources":["webpack:///./src/lib/components/Builder.react.js"],"names":["divStyle","margin","border","Builder","props","fields","value","setProps","onValueChanged","e","Component","defaultProps","propTypes","PropTypes","array","func"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA,IAAMA,QAAQ,GAAG;AACfC,QAAM,EAAE,MADO;AAEfC,QAAM,EAAE;AAFO,CAAjB;;IAIqBC,O;;;;;;;;;;;;;WACjB,kBAAS;AACL,wBAAmC,KAAKC,KAAxC;AAAA,UAAQC,MAAR,eAAQA,MAAR;AAAA,UAAgBC,KAAhB,eAAgBA,KAAhB;AAAA,UAAsBC,QAAtB,eAAsBA,QAAtB;AACA,0BACI,2DAAC,sEAAD;AACA,cAAM,EAAEF,MADR;AAEA,aAAK,EAAEC,KAFP,CAGA;AAHA;AAIA,sBAAc,EAAE,KAAKE;AAJrB,2BAKgB,wBAACC,CAAD,EAAO;AACnBF,gBAAQ,CAAC;AAAED,eAAK,EAAEG,CAAC,CAACH;AAAX,SAAD,CAAR;AACD,OAPH,EADJ;AAYP;;;;EAfoCI,+C;;;AAiBrCP,OAAO,CAACQ,YAAR,GAAuB;AAAEL,OAAK,EAAE;AAAT,CAAvB;AACAH,OAAO,CAACS,SAAR,GAAoB;AAClB;AACF;AACA;AACEP,QAAM,EAAEQ,iDAAS,CAACC,KAJA;;AAKlB;AACF;AACA;AACER,OAAK,EAAEO,iDAAS,CAACC,KARC;;AASlB;AACF;AACA;AACA;AACGP,UAAQ,EAAEM,iDAAS,CAACE;AAbH,CAApB,C","file":"e149f6c-main-wps-hmr.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FilterBuilder from 'devextreme-react/filter-builder';\r\n\r\nconst divStyle = {\r\n  margin: '40px',\r\n  border: '5px solid pink'\r\n};\r\nexport default class Builder extends Component {\r\n    render() {\r\n        const { fields, value,setProps } = this.props;\r\n        return (\r\n            <FilterBuilder\r\n            fields={fields}\r\n            value={value}\r\n            //groupOperations={['AND', 'OR']}\r\n            onValueChanged={this.onValueChanged}\r\n            onValueChanged={(e) => {\r\n                setProps({ value: e.value })\r\n              }}\r\n          >\r\n          </FilterBuilder>\r\n        )\r\n}\r\n}\r\nBuilder.defaultProps = { value: [] };\r\nBuilder.propTypes = {\r\n  /**\r\n   * An key,value array of datafield with at least a datafield key, example [{dataField: 'Name',}, {dataField: 'Price',dataType: 'number',format: 'currency',}, {dataField: 'Current_Inventory',dataType: 'number',caption: 'Inventory',}]\r\n   */\r\n  fields: PropTypes.array,\r\n  /**\r\n  * builded array of combined queries\r\n  */\r\n  value: PropTypes.array,\r\n  /**\r\n   * Dash-assigned callback that should be called to report property changes\r\n   * to Dash, to make them available for callbacks.\r\n   */\r\n   setProps: PropTypes.func\r\n}"],"sourceRoot":""}