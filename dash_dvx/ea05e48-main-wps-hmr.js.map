{"version":3,"sources":["webpack:///./src/lib/components/Filterbuilder.react.js"],"names":["divStyle","margin","border","Filterbuilder","props","id","fields","value","setProps","e","Component","defaultProps","propTypes","PropTypes","string","array","func"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA,IAAMA,QAAQ,GAAG;AACfC,QAAM,EAAE,MADO;AAEfC,QAAM,EAAE;AAFO,CAAjB;;IAIqBC,a;;;;;;;;;;;;;WACjB,kBAAS;AACL,wBAAuC,KAAKC,KAA5C;AAAA,UAAQC,EAAR,eAAQA,EAAR;AAAA,UAAYC,MAAZ,eAAYA,MAAZ;AAAA,UAAoBC,KAApB,eAAoBA,KAApB;AAAA,UAA0BC,QAA1B,eAA0BA,QAA1B;AACA,0BACI,2DAAC,sEAAD;AACA,UAAE,EAAEH,EADJ;AAEA,cAAM,EAAEC,MAFR;AAGA,aAAK,EAAEC,KAHP,CAIA;AACA;AALA;AAMA,sBAAc,EAAE,wBAACE,CAAD,EAAO;AACnBD,kBAAQ,CAAC;AAAED,iBAAK,EAAEE,CAAC,CAACF;AAAX,WAAD,CAAR;AACD;AARH,QADJ;AAaP;;;;EAhB0CG,+C;;;AAkB3CP,aAAa,CAACQ,YAAd,GAA6B;AAAEJ,OAAK,EAAE;AAAT,CAA7B;AACAJ,aAAa,CAACS,SAAd,GAA0B;AACxB;AACF;AACA;AACGP,IAAE,EAAEQ,iDAAS,CAACC,MAJS;;AAKxB;AACF;AACA;AACER,QAAM,EAAEO,iDAAS,CAACE,KARM;;AASxB;AACF;AACA;AACER,OAAK,EAAEM,iDAAS,CAACE,KAZO;;AAaxB;AACF;AACA;AACA;AACGP,UAAQ,EAAEK,iDAAS,CAACG;AAjBG,CAA1B,C","file":"ea05e48-main-wps-hmr.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FilterBuilder from 'devextreme-react/filter-builder';\r\n\r\nconst divStyle = {\r\n  margin: '40px',\r\n  border: '5px solid pink'\r\n};\r\nexport default class Filterbuilder extends Component {\r\n    render() {\r\n        const { id, fields, value,setProps } = this.props;\r\n        return (\r\n            <FilterBuilder\r\n            id={id}\r\n            fields={fields}\r\n            value={value}\r\n            //groupOperations={['AND', 'OR']}\r\n            //onValueChanged={this.onValueChanged}\r\n            onValueChanged={(e) => {\r\n                setProps({ value: e.value })\r\n              }}\r\n          >\r\n          </FilterBuilder>\r\n        )\r\n}\r\n}\r\nFilterbuilder.defaultProps = { value: [] };\r\nFilterbuilder.propTypes = {\r\n  /**\r\n   * The ID used to identify this component in Dash callbacks.\r\n   */\r\n   id: PropTypes.string,\r\n  /**\r\n   * An key,value array of datafield with at least a datafield key, example [{dataField: 'Name',}, {dataField: 'Price',dataType: 'number',format: 'currency',}, {dataField: 'Current_Inventory',dataType: 'number',caption: 'Inventory',}]\r\n   */\r\n  fields: PropTypes.array,\r\n  /**\r\n  * builded array of combined queries\r\n  */\r\n  value: PropTypes.array,\r\n  /**\r\n   * Dash-assigned callback that should be called to report property changes\r\n   * to Dash, to make them available for callbacks.\r\n   */\r\n   setProps: PropTypes.func\r\n}"],"sourceRoot":""}